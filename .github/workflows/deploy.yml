name: Deploy

on:
  - push

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install python dependancies
        run: poetry install
        working-directory: python

      - name: Check packaging for crates.io
        run: cargo publish --dry-run

      - name: Check packaging for pypi.org
        run: poetry run maturin develop --release
        working-directory: python

      - name: Check version consistency
        working-directory: python
        run: |
          poetry run python -c "
          import sys
          import toml

          py_version = toml.load('pyproject.toml')['tool']['poetry']['version']
          pyrs_version = toml.load('Cargo.toml')['package']['version']
          rs_version = toml.load('../Cargo.toml')['package']['version']

          if not py_version == pyrs_version == rs_version:
            print(
              f'Python package ({py_version}) and crates ({rs_version}, '
              f'{pyrs_version}) are inconsistent.'
            )
            sys.exit(1)
          "

      - name: Login to crates.io
        run: cargo login $TOKEN
        env:
          TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish
        if: github.ref == 'refs/heads/master'

      - name: Publish to pypi.org
        run: poetry run maturin publish --username $USER --password $PASS
        working-directory: python
        if: github.ref == 'refs/heads/master'
        env:
          USER: remi-dupre
          PASS: ${{ secrets.PYPI_PASSWORD }}
