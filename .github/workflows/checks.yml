name: Checks

on:
  - push

env:
  CARGO_TERM_COLOR: always

jobs:
  # ---
  # --- Run tests and lints for Rust library
  # ---

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: ["opening-hours-syntax", ".", "compact-calendar", "python"]
        toolchain: ["stable", "beta", "nightly"]
    defaults:
      run:
        working-directory: ${{ matrix.crate }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
      - name: Display rust version
        run: |
          rustc --version
          cargo clippy -- --version
          cargo fmt -- --version
      - name: Lint
        run: cargo clippy -- -D warnings
        if: matrix.toolchain != 'nightly'
      - name: Format
        run: cargo fmt -- --check
        if: matrix.toolchain != 'nightly'
      - name: Tests
        run: cargo test

  # ---
  # --- Check that all versions are consistency accross packages
  # ---

  check-version:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: scripts
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependancies
        run: poetry install
      - name: Check version consistency
        run: poetry run ./check-version.py

  # ---
  # --- Calculate coverage using tarpaulin
  # ---

  coverage:
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Generate code coverage
        run: >-
          cargo +nightly tarpaulin --out xml
          --ignore-panics --ignore-tests
          --features disable-test-timeouts
          --run-types Tests --run-types Doctests
          -p opening-hours -p opening-hours-syntax -p compact-calendar -p opening-hours-py
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{secrets.CODECOV_TOKEN}}
